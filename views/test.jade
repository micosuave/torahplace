doctype html
html
  head
    link(href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-alpha.2/css/bootstrap.min.css", rel="stylesheet")
    link(href="https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css", rel="stylesheet")
    link(href="//lexspace.net/llp_core/dist/app.full.min.css", rel="stylesheet")
    link(rel="stylesheet",href="/llp_core/dist/app.full.min.css")
    script(src="https://code.jquery.com/jquery-2.2.0.min.js")
    script(src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.16/d3.min.js")
    script 
      | document.onload(function(){
      | var margin = { top: 15, right: 10, bottom: 5, left: 5 };
      |  var width = window.innerWidth - margin.left - margin.right,height = window.innerHeight - margin.top - margin.bottom;
      |  var color = d3.scale.ordinal().range(["rgba(255,255,255,0)", "#68a4d6", "#9ebb4f", "#d6a400", "#860024", "#880096"]);
      |  var tooltip = d3.select('body').append('div') .style("position", "absolute") .style("padding", "0.25rem") .style("background", "rgba(50,50,50,0.5)") .style("-webkit-backdrop-filter", "blur(8px)") .style("-webkit-filter", "blur(2px)") .style("filter", "blur(2px)") .style("color", "#ddd") .style("border-radius", "0.25rem") .style("opacity", 0); 
      |  var treemap = d3.layout.treemap().size([width, height]).sticky(false).mode('squarify').padding([5, 5, 5, 5]).value(function(d) { return d.text.length; }).sort(function(d) { return 0 - d.name.slice(d.name.lastIndexOf(0), d.name.length); }) 
      |  var div = d3.select('body').append("div") .attr("id", "pendingtreecontainer").style("position", "relative").style("width", (width + margin.left + margin.right) + "px").style("height", (height + margin.top + margin.bottom) + "px") .style("left", margin.left + "px") .style("top", margin.top +"px"); 
      |d3.json("/files/public/uspto/patents/!{patent}-claims.json", function(error, root, data) { var node = div.datum(root).selectAll(".node") .data(treemap.nodes) .enter().append("div") .attr("class", function(d) { return d.class + " " + "node"; }) .attr("id", function(d) { return d.id; }) .call(position) .style("background", function(d) { return d.children ? colorize(d) : null; }) .text(function(d) { return d.children ? null : namer(d.name) }) .style("font-size", function(d) { return font(d.class); }) .style("color", function(d) { return fontcolor(d.class); }) .style("padding-left", function(d) { return pad(d); }) .on("mouseover", function(d) { tooltip.transition() .style("opacity", 1); tooltip.html('<div class="bootstrap img img-thumbnail" style="text-align: left; width: 40rem;"><h6>Claim ' + d.name + '</h6><blockquote>' + d.text + '</blockquote></div>').style('left', (d3.event.pageX) + 'px') .style('top', (d3.event.pageY) + 'px') .style("z-index", 2000) .style("-webkit-filter", "blur(0px)") .style("filter", "blur(0px)");d3.select(this) .transition() .style("opacity", 0.66) .style("-webkit-backdrop-filter", "blur(8px)") .style("-webkit-filter", "blur(2px)") .style("filter", "blur(2px)") .style("background", "rgb(50,50,50)") .style("cursor", "pointer"); }) .on("mouseout", function(d) { tooltip.transition() .style("opacity", 0) .style("z-index", -1); d3.select(this) .transition() .style("opacity", 1) .style("-webkit-filter", "blur(0px)") .style("filter", "blur(0px)") .style("background", function(d) { return d.children ? colorize(d) : null; }); }) .on("click", function(d) { info(d).style('width', width * 0.75).style('left', (d3.event.pageX) + 'px') .style('top', (d3.event.pageY) + 'px') .style("z-index", 2000); }); d3.selectAll("[name='mode']").on("change", function change() {var value = this.value === "count"  ? function() { return 1; }: function(d) { return d.text.length; };node.data(treemap.value(value).nodes) .transition() .duration(2500) .call(position); });});()
      |  var info = function(d) { var newEl = $(document.createElement('div')); newEl.attr('id', d.id).addClass('card card-fancy sub-independent').css('position','absolute'); newEl.html('<a class="text-muted" style="position:absolute;right:0;" onclick="$(this).parent().remove()"><span class="pull-right">&times;</span></a><h6><b>' + d.name + '</b></h6><blockquote>' + d.text + '</blockquote>'); newEl.appendTo($(tooltip).parent()); newEl.draggable({stack: '.card', cursor: 'move'}).resizable();}; 
      | function colorize(d) { if (d.class === 'super-independent') { return color(d.class); } else if (d.class === 'dependent') { return color(d.parent); } else { return color(d.id); } };
      | function position() { this.style("left", function(d) { return d.x + "px"; }).style("top", function(d) { return d.y + "px"; }) .style("width", function(d) { return Math.max(0, d.dx - 1) + "px"; }).style("height", function(d) { return Math.max(0, d.dy - 1) + "px"; }); }
      | function pad(d) { if (d.class === 'dependent' && d.children) { return '50px'; } else { return; } }
      | function font(dclass) { switch (dclass) { case '.super-independent': return '36px'; break; case '.independent': return '36px'; break; case '.dependent': return '16px'; break; } }
      | function fontcolor(dclass) { switch (dclass) { case '.super-independent': return 'white'; break; case '.independent': return 'white'; break; case '.dependent': return 'black'; break; } }
      | function sizer(dclass) { switch (dclass) { case '.super-independent': return ''; break; case '.independent': return 10; break; case '.dependent': return 2; break; } }
      | function namer(name) { if (name.lastIndexOf('0') == name.length - 1) { return name.slice(name.lastIndexOf('00') + 2, name.length); } else { return name.slice(name.lastIndexOf('0') + 1, name.length); } }));
body
  a(href="/") |!{data}